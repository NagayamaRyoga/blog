{"pageProps":{"article":{"slug":"2019-04-01-cookpad-intern","title":"Cookpad Spring 1day Internship 2019 Swiftコンパイラコースに参加した","publishedAt":"2019-04-01T00:00:00.000Z","tags":["Swift","コンパイラ"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-04-01-cookpad-intern.png","bodyContent":"2019年3月28日(木)にクックパッド株式会社で開催された1dayインターンシップのSwiftコンパイラコースに参加しました。\n\nこのコースは、名前の通りSwiftを用いてSwift言語のサブセットコンパイラを作成するための技術・知識を学ぶためのワークショップです。\n\nインターンシップの主な講義内容、課題はGitHub上で公開されています。\n\nhttps://github.com/NagayamaRyoga/MinSwift-workshop\n\n## 作成するコンパイラについて\n\nこのワークショップの目的は、関数の定義、呼び出しなどができる簡単なSwift言語のサブセット(MinSwift)を構文解析し、LLVM IRを出力する(もしくはJITコンパイルする)コンパイラを作成することでした。\n\nそのために、再帰降下構文解析器の作成と、LLVM IRを出力するコードジェネレータの作成方法を学びました。\n\nまた、字句解析器は実装せず、トークンの分割には[swift-syntax](https://github.com/apple/swift-syntax)を使用しました。\n\n## 講義の難易度について\n\n講義の内容は主にLLVMのチュートリアルである[Kaleidoscope](https://llvm.org/docs/tutorial/)の前半程度の範囲であり、要求される知識・取得できる知識もおおよそそれに準じます。\n\n実装の難易度に関しては、すでにある程度基盤の書かれたコードの一部が歯抜け・未実装になっており、それを穴埋めする形で実装していくため、上記Kaleidoscopeの実装よりも難易度が低めです。\n\nまた、開発はテスト駆動開発(TDD)で行われ、テストケースのいくつかはあらかじめ用意されているため、実装の検証も簡単化されていました。\n\n## 参加直前\n\n事前にインターンシップで利用するSlackチャンネルを通じて、\n当日の講義で使用する[プロジェクトと環境構築の方法](https://github.com/giginet/MinSwift-workshop)が公開されました。\n\n参加直前は1dayとはいえはじめてのインターンシップということもあり強い不安を憶えていたため、\n「知っている(=1人でも実装が可能な)コードの実装に貴重なインターンシップの時間を割くべきではない」\n「インターンシップに参加する他の意欲的な参加者に対して出遅れるべきではない」\nと考え、2日前から移動中などの合間時間で当日の課題をあらかじめ実装していました。\n\n## 参加当日\n\nそうすると当日にやることがほとんどなにもありませんでした。\n\n## 参加した感想\n\n普段からコンパイラを開発しており、また、とても詳しいとまでは言えずとも以前から趣味や研究でLLVMを利用してきたため、一定量の知識がありました。\nさらに、数年前にKaleidoscopeのチュートリアルを読んだこともあったので、今回のインターンシップに参加したことで新たに得られた知識や技術は特にありませんでした。\n\nそういう意味ではわずかに不満の残る内容となってしまいました。\n\n## 最後に\n\nクックパッドの講師の先生方、共にインターンシップへ参加した皆さん、今回はありがとうございました。\n\nまた、午後からは体調を崩してしまったため様々な方々に大変なご迷惑をおかけしました。重ねてお礼を申し上げます。","bodyHtml":"<p>2019年3月28日(木)にクックパッド株式会社で開催された1dayインターンシップのSwiftコンパイラコースに参加しました。</p>\n<p>このコースは、名前の通りSwiftを用いてSwift言語のサブセットコンパイラを作成するための技術・知識を学ぶためのワークショップです。</p>\n<p>インターンシップの主な講義内容、課題はGitHub上で公開されています。</p>\n<p><a href=\"https://github.com/NagayamaRyoga/MinSwift-workshop\">https://github.com/NagayamaRyoga/MinSwift-workshop</a></p>\n<h2>作成するコンパイラについて</h2>\n<p>このワークショップの目的は、関数の定義、呼び出しなどができる簡単なSwift言語のサブセット(MinSwift)を構文解析し、LLVM IRを出力する(もしくはJITコンパイルする)コンパイラを作成することでした。</p>\n<p>そのために、再帰降下構文解析器の作成と、LLVM IRを出力するコードジェネレータの作成方法を学びました。</p>\n<p>また、字句解析器は実装せず、トークンの分割には<a href=\"https://github.com/apple/swift-syntax\">swift-syntax</a>を使用しました。</p>\n<h2>講義の難易度について</h2>\n<p>講義の内容は主にLLVMのチュートリアルである<a href=\"https://llvm.org/docs/tutorial/\">Kaleidoscope</a>の前半程度の範囲であり、要求される知識・取得できる知識もおおよそそれに準じます。</p>\n<p>実装の難易度に関しては、すでにある程度基盤の書かれたコードの一部が歯抜け・未実装になっており、それを穴埋めする形で実装していくため、上記Kaleidoscopeの実装よりも難易度が低めです。</p>\n<p>また、開発はテスト駆動開発(TDD)で行われ、テストケースのいくつかはあらかじめ用意されているため、実装の検証も簡単化されていました。</p>\n<h2>参加直前</h2>\n<p>事前にインターンシップで利用するSlackチャンネルを通じて、\n当日の講義で使用する<a href=\"https://github.com/giginet/MinSwift-workshop\">プロジェクトと環境構築の方法</a>が公開されました。</p>\n<p>参加直前は1dayとはいえはじめてのインターンシップということもあり強い不安を憶えていたため、\n「知っている(=1人でも実装が可能な)コードの実装に貴重なインターンシップの時間を割くべきではない」\n「インターンシップに参加する他の意欲的な参加者に対して出遅れるべきではない」\nと考え、2日前から移動中などの合間時間で当日の課題をあらかじめ実装していました。</p>\n<h2>参加当日</h2>\n<p>そうすると当日にやることがほとんどなにもありませんでした。</p>\n<h2>参加した感想</h2>\n<p>普段からコンパイラを開発しており、また、とても詳しいとまでは言えずとも以前から趣味や研究でLLVMを利用してきたため、一定量の知識がありました。\nさらに、数年前にKaleidoscopeのチュートリアルを読んだこともあったので、今回のインターンシップに参加したことで新たに得られた知識や技術は特にありませんでした。</p>\n<p>そういう意味ではわずかに不満の残る内容となってしまいました。</p>\n<h2>最後に</h2>\n<p>クックパッドの講師の先生方、共にインターンシップへ参加した皆さん、今回はありがとうございました。</p>\n<p>また、午後からは体調を崩してしまったため様々な方々に大変なご迷惑をおかけしました。重ねてお礼を申し上げます。</p>\n","preview":"2019年3月28日(木)にクックパッド株式会社で開催された1dayインターンシップのSwiftコンパイラコースに参加しました。\n\nこのコースは、名前の通りSwiftを用いてSwift言語のサブセットコンパイラを作成するための技術・知識を学ぶためのワークショップです。\n\nインターンシップの主な講義内容、課題はGitHub上で公開されています。","sourceBase":"2019-04-01-cookpad-intern.md"}},"__N_SSG":true}