{"pageProps":{"articles":[{"slug":"2023-08-23-editorconfig-checker","title":"【M3 Tech Blog】editorconfig-checkerを導入してコードレビュー時の摩擦を軽減する","publishedAt":"2023-08-23T00:00:00.000Z","tags":["Editor","EditorConfig","CI/CD"],"thumbnail":"/blog/images/2023/08/23/tokyo-big-sight.jpg","externalUrl":"https://www.m3tech.blog/entry/editorconfig-checker","preview":"【Unit4 ブログリレー 2日目】\n\n永山です。\n\n2023年に至ってもエディタに関する話題がプログラマ間のグルーミングツールとして機能していることからも判る通り、世には多様なエディタが存在し、またそれらを使用するプログラマが存在します。","sourceBase":"2023-08-23-editorconfig-checker.md"},{"slug":"2023-03-28-modern-zsh-prompt","title":"【M3 Tech Blog】高機能なZshプロンプトを自作する ーモダンなシェルプロンプトを構成する工夫ー","publishedAt":"2023-03-28T00:00:00.000Z","tags":["Zsh","Shell","Go"],"thumbnail":"/blog/images/2023/03/28/jargon.png","externalUrl":"https://www.m3tech.blog/entry/modern-zsh-prompt","preview":"永山です。\n\n普段から趣味PC、業務PCの双方で Zsh をログインシェルとして利用しています。\nエムスリー社内には fish や、少数ながら Xonsh のユーザも存在していますが、多くのエンジニアがZshを使用しています ((エンジニアに支給されるPCは基本的にmacOSであるため))。","sourceBase":"2023-03-28-modern-zsh-prompt.md"},{"slug":"2022-05-11-dotfiles-bonsai","title":"【M3 Tech Blog】dotfilesのこだわりを晒す","publishedAt":"2022-05-11T00:00:00.000Z","tags":["dotfiles","Shell","Zsh"],"thumbnail":"/blog/images/2022/05/11/navi.png","externalUrl":"https://www.m3tech.blog/entry/dotfiles-bonsai","preview":"Unit4の永山です。\ndotfiles弄りを趣味にしています。\n\n世にdotfilesを題材とした記事は数多く存在していますがその大半は「dotfilesを作ってみた」「こうやって管理しています」などの表層的な部分の紹介に留まり、その奥にあるべき細部のこだわりや個人の思想にまで踏み込んだ記事は数えるほどしかありません。","sourceBase":"2022-05-11-dotfiles-bonsai.md"},{"slug":"2022-03-04-compiler-and-pointers","title":"【M3 Tech Blog】コード生成から考えるポインタの意味論","publishedAt":"2022-03-04T00:00:00.000Z","tags":["C","コンパイラ"],"thumbnail":"/blog/images/2022/03/04/implicit-cast.png","externalUrl":"https://www.m3tech.blog/entry/2022/03/04/110000","preview":"新卒の永山です。\n\nエムスリーでは隔週金曜日に Tech Talk という社内勉強会を実施しています。\nエムスリー公式テックチャンネル 【M3 Tech Channel】 では過去の発表のアーカイブを公開しています。\n\n今回は上記YouTubeチャンネルに公開されている私の過去の発表について紹介いたします。","sourceBase":"2022-03-04-compiler-and-pointers.md"},{"slug":"2022-02-24-rubys-value-representation","title":"【M3 Tech Blog】Rubyの値はどう表現されるか (クイズもあるよ)","publishedAt":"2022-02-24T00:00:00.000Z","tags":["Ruby","C"],"thumbnail":"/blog/images/2022/02/24/shared-string.png","externalUrl":"https://www.m3tech.blog/entry/2022/02/24/110000","preview":"新卒の永山です。\n\nエムスリーでは隔週金曜日に Tech Talk という社内勉強会を実施しています。\nエムスリー公式テックチャンネル 【M3 Tech Channel】 では過去の発表のアーカイブを公開しています。\n\n今回は上記YouTubeチャンネルに公開されている私の過去の発表について紹介いたします。","sourceBase":"2022-02-24-rubys-value-representation.md"},{"slug":"2022-02-10-pp-add","title":"【M3 Tech Blog】純粋関数型言語Cプリプロセッサで足し算をする","publishedAt":"2022-02-10T00:00:00.000Z","tags":["C"],"thumbnail":"/blog/images/2022/02/10/title.png","externalUrl":"https://www.m3tech.blog/entry/2022/02/10/110000","preview":"新卒の永山です。\n\nエムスリーでは隔週金曜日に Tech Talk という社内勉強会を実施しています。\nエムスリー公式テックチャンネル 【M3 Tech Channel】 では過去の発表のアーカイブを公開しています。\n\n今回は上記YouTubeチャンネルに公開されている私の過去の発表について紹介いたします。","sourceBase":"2022-02-10-pp-add.md"},{"slug":"2022-01-04-making-nosh","title":"【M3 Tech Blog】「Shell作れます」と言うために","publishedAt":"2022-01-04T00:00:00.000Z","tags":["D言語","Shell"],"thumbnail":"/blog/images/2022/01/04/pipeline.png","externalUrl":"https://www.m3tech.blog/entry/making-nosh","preview":"新卒の永山です。\n昨今、SNSではなぜかシェルを作ることに関する言及が盛んに行われています。\nそこで、本記事ではシェルの実装に関する理解を深めることを目的に簡単なシェル「nosh」 をインクリメンタルに作成したいと思います。\n\n完成した実装は以下のリポジトリで公開しています。","sourceBase":"2022-01-04-making-nosh.md"},{"slug":"2021-08-22-oss-lt","title":"OSS LT会 - vol.2 で発表した","publishedAt":"2021-08-22T00:00:00.000Z","tags":["勉強会","コンパイラ","LLVM"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2021-08-22-oss-lt.png","preview":"株式会社ラクスさんの主催する OSS LT会 ★初心者の方・やっていきも大歓迎 - vol.2 で発表しました。\n\n発表スライド\n\n発表の概要\n\nC言語のポインタや、ポインタに関する演算子である &演算子 と *演算子 について、コンパイラの実装の観点から論じることで通常とは異なる解釈を与える試みについて発表しました。","sourceBase":"2021-08-22-oss-lt.md"},{"slug":"2020-02-13-ruby-pr2","title":"Ruby に Pull-Request がマージされた (2回目)","publishedAt":"2020-02-13T00:00:00.000Z","tags":["Ruby"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2020-02-13-ruby-pr2.png","preview":"2020年1月12日に発行したチケットと、その実装である Pull-Request が2020年2月10日に ruby/ruby のtrunkにマージされました。\n\n以下、そのPRの内容などについて述べます。\n\n背景\n\nクックパッド株式会社の夏インターンシップに参加した際、InstructionSequence (ISeq) のバイナリ表現を改善しました。","sourceBase":"2020-02-13-ruby-pr2.md"},{"slug":"2020-02-08-heiseirb01","title":"平成Ruby会議 01 に登壇した","publishedAt":"2020-02-08T00:00:00.000Z","tags":["Ruby","勉強会"],"thumbnail":"/blog/images/2020/02/08/heiseirb.png","ogpImage":"https://nagayamaryoga.github.io/blog/images/2020-02-08-heiseirb01.png","preview":"2019年12月14日、株式会社ドリコムで開催された 平成Ruby会議 01 にスピーカーとして参加しました。\n\n直前2週間ほど風邪を拗らせ体調がすこぶる悪い中での参加になりました。","sourceBase":"2020-02-08-heiseirb01.md"},{"slug":"2019-11-08-ruby-grant","title":"2019年度Rubyアソシエーション開発助成 に採択された","publishedAt":"2019-11-08T00:00:00.000Z","tags":["Ruby"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-11-08-ruby-grant.png","preview":"Rubyアソシエーションが主催する 2019年度Rubyアソシエーション開発助成 に提案プロジェクトが採択されました。\n\n題目は「複数ファイルに対応したプリコンパイル機構の作成」です。\n\nCookpad株式会社でのインターン に参加した際、メンターの方からの勧めがあり応募したところ審査を通過しました。\n\n以下が応募の際に提出した提案の内容です (一部省略)。","sourceBase":"2019-11-08-ruby-grant.md"},{"slug":"2019-10-21-gcce2019","title":"2019 IEEE 8th Global Conference on Consumer Electronics に論文を投稿した","publishedAt":"2019-10-21T00:00:00.000Z","tags":["学会","LLVM"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-10-21-gcce2019.png","preview":"2019 IEEE 8th Global Conference on Consumer Electronics (GCCE 2019) に論文を投稿し、2019年10月18日に会場でポスター発表をしました。","sourceBase":"2019-10-21-gcce2019.md"},{"slug":"2019-09-26-cookpad-summer-intern","title":"【クックパッド開発者ブログ】Ruby中間表現のバイナリ出力を改善する","publishedAt":"2019-09-26T00:00:00.000Z","tags":["Ruby"],"thumbnail":"/blog/images/2019/09/26/cache-size.png","externalUrl":"https://techlife.cookpad.com/entry/2019/09/26/143000","preview":"Ruby 開発チームに4週間インターン生として参加いたしました、永山 (GitHub: NagayamaRyoga) です。 私は「Ruby中間表現のバイナリ出力の改善」という課題に取り組み、Railsアプリケーションのコンパイルキャッシュのサイズを70%以上削減することに成功しました。以下ではこの課題の概要とその成果について述べたいと思います。","sourceBase":"2019-09-26-cookpad-summer-intern.md"},{"slug":"2019-09-18-cookpad-summer-intern-ruby","title":"Cookpad Summer Internship 2019 高難易度コースに参加した","publishedAt":"2019-09-18T00:00:00.000Z","tags":["Ruby"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-09-18-cookpad-summer-intern-ruby.png","preview":"2019年8月16日から2019年9月13日まで、インターンとしてクックパッド株式会社でRuby処理系の開発を経験しました。","sourceBase":"2019-09-18-cookpad-summer-intern-ruby.md"},{"slug":"2019-05-08-writing-wasm-passes","title":"Binaryenを使用してWebAssemblyを操作するパスを作成する","publishedAt":"2019-05-08T00:00:00.000Z","tags":["C++","WebAssembly","Binaryen"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-05-08-writing-wasm-passes.png","preview":"LLVMはLLVM IRを操作・走査できるカスタムパスの作成をサポートしており、optコマンドの-loadオプションを利用することで作成したカスタムパスを簡単に適用できます。\n\n参考： LLVM documentation - Writing an LLVM Pass","sourceBase":"2019-05-08-writing-wasm-passes.md"},{"slug":"2019-04-01-cookpad-intern","title":"Cookpad Spring 1day Internship 2019 Swiftコンパイラコースに参加した","publishedAt":"2019-04-01T00:00:00.000Z","tags":["Swift","コンパイラ"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-04-01-cookpad-intern.png","preview":"2019年3月28日(木)にクックパッド株式会社で開催された1dayインターンシップのSwiftコンパイラコースに参加しました。\n\nこのコースは、名前の通りSwiftを用いてSwift言語のサブセットコンパイラを作成するための技術・知識を学ぶためのワークショップです。\n\nインターンシップの主な講義内容、課題はGitHub上で公開されています。","sourceBase":"2019-04-01-cookpad-intern.md"},{"slug":"2019-03-02-writing-thesis-in-markdown","title":"卒業論文をMarkdownで書く","publishedAt":"2019-03-02T00:00:00.000Z","tags":["Markdown","LaTeX","Pandoc"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-03-02-writing-thesis-in-markdown.png","preview":"はじめに\n\n卒業論文に限らず、論文や技術文書とLaTeXは切り離すことができません。\n\nしかしながら、TeXをそのまま書くのは面倒なので可能な限りMarkdownなどの軽量な文書形式で記述できると嬉しいですね。\n\nそこでMarkdownからLaTeXを経由してPDFを生成するポータブルな環境を構築しました。","sourceBase":"2019-03-02-writing-thesis-in-markdown.md"},{"slug":"2019-03-01-introduction","title":"ウェブページとミニブログを作った","publishedAt":"2019-03-01T00:00:00.000Z","tags":["Nuxt.js","Markdown"],"ogpImage":"https://nagayamaryoga.github.io/blog/images/2019-03-01-introduction.png","preview":"はじめに\n\nJavaScriptフレームワークであるNuxt.jsを使ってウェブページとミニブログ(当サイト)を作りました。\n\n以下では当サイトを構成する技術的要素について紹介します。\n\n構成要素\n\nNuxt.js\n\nフロントエンドはNuxt.jsで作成しました。\n単一ファイルコンポーネントやScoped Styleが簡単に扱える点が大変によいです。","sourceBase":"2019-03-01-introduction.md"}]},"__N_SSG":true}